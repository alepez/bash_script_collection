#!/bin/bash

CONFIG_FILE="${HOME}/.config/quick-git/quick-git.conf"

if [ ! -e "${CONFIG_FILE}" ]; then {
  echo "Creating ${CONFIG_FILE}"
  mkdir -p "$( dirname "${CONFIG_FILE}" )"
  (
  echo '#QUICK_GIT_DEPOT=""'
  ) > "${CONFIG_FILE}"
  "$EDITOR" "${CONFIG_FILE}"
} fi

source "${CONFIG_FILE}"

function g_die() {
  echo "${1}"
  exit 1
}

function g_lazy() {
  git add . -A -v
  git commit || g_die "Commit aborted"
}

function g_lazy_push() {
  g_lazy
  git push --all
}

function g_share() {
  git init
  git remote add origin $1
  g_lazy_push
  git push origin master
}

function g_list_remotes() {
  git remote -v show
}

function g_import() {
  if [ -z "${QUICK_GIT_DEPOT}" ]; then {
    g_die "QUICK_GIT_DEPOT is not defined in ${CONFIG_FILE}"
  } fi
  local path=${1}
  local local_dir=${2}
  git clone "${QUICK_GIT_DEPOT}:${path}" "${local_dir}"
}

function g_export() {
  if [ -z "${QUICK_GIT_DEPOT}" ]; then {
    g_die "QUICK_GIT_DEPOT is not defined in ${CONFIG_FILE}"
  } fi
  local path="${1}"
  if [ -z "${path}" ]; then {
    g_die "First argument must be remote directory"
  } fi
  local local_dir="${2}"
  if [ -z "${local_dir}" ]; then {
    g_die "Second argument must be local directory"
  } fi
  local remote="${QUICK_GIT_DEPOT}:${path}/${local_dir}.git"
  (
  cd "${local_dir}" &>/dev/null || g_die "Cannot cd to ${local_dir}";
  git init
  git remote add origin "${remote}"
  g_lazy_push
  git push origin master
  )
}

COMMAND="${1}"

case "${COMMAND}" in
l) g_lazy; exit;;
lazy) g_lazy; exit;;
lp) g_lazy_push; exit;;
lazy-push) g_lazy_push; exit;;
s) g_share $2; exit;;
share) g_share $2; exit;;
lsr) g_list_remotes; exit;;
list-remotes) g_list_remotes; exit;;
import) shift; g_import $@; exit;;
export) shift; g_export $@; exit;;
esac

git $@
